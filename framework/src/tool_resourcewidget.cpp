/****************************************************************************
**
** Copyright (C) 2016
**
** This file is generated by the Magus toolkit
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
****************************************************************************/

// Include
#include "tool_resourcewidget.h"
#include <QMessageBox>

namespace Magus
{
    //****************************************************************************/
    QtResourceWidget::QtResourceWidget(const QString& iconDir, QWidget* parent) : QWidget(parent)
    {
        mIconDir = iconDir;
        QHBoxLayout* mainLayout = new QHBoxLayout;
        mResourceMain = new QtResourceMain(iconDir); // Don't set parent
        connect(mResourceMain, SIGNAL(jSonFileSelectedToProcess(QString)), this, SLOT(handleJsonFileSelectedToProcess(QString)));
        connect(mResourceMain, SIGNAL(loadButtonClicked()), this, SLOT(handleLoadResources()));
        connect(mResourceMain, SIGNAL(saveButtonClicked()), this, SLOT(handleSaveResources()));
        mainLayout->addWidget(mResourceMain);
        setLayout(mainLayout);

        QRect rec = QApplication::desktop()->screenGeometry();
        setMinimumWidth(0.7 * rec.width());
        setMaximumWidth(0.7 * rec.width());
        setMinimumHeight(0.8 * rec.height());
        setMaximumHeight(0.8 * rec.height());
    }

    //****************************************************************************/
    QtResourceWidget::~QtResourceWidget(void)
    {
    }

    //****************************************************************************/
    QVector<QtResourceInfo*>& QtResourceWidget::getResources (void)
    {
        // Delegate to mResourceMain
        return mResourceMain->getResources();
    }

    //****************************************************************************/
    void QtResourceWidget::setResources (const QVector<QtResourceInfo*>& resources)
    {
        mResourceMain->setResources(resources);
    }

    //****************************************************************************/
    void QtResourceWidget::addMaterial(const QString& baseNameJson,
                                       const QString& fullNameJson,
                                       const QString& baseNameThumb,
                                       EditorHlmsTypes type)
    {
        mResourceMain->addMaterial(baseNameJson, fullNameJson, baseNameThumb, type);
    }

    //****************************************************************************/
    void QtResourceWidget::handleJsonFileSelectedToProcess(const QString& fullNameJson)
    {
        emit jSonFileSelectedToProcess(fullNameJson);
    }

    //****************************************************************************/
    void QtResourceWidget::handleLoadResources(void)
    {
        emit loadResources();
    }

    //****************************************************************************/
    void QtResourceWidget::handleSaveResources(void)
    {
        emit saveResources();
    }
}
