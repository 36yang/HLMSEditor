/****************************************************************************
**
** Copyright (C) 2016
**
** This file is generated by the Magus toolkit
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
****************************************************************************/

#ifndef HLMS_NODE_UNLIT_DATABLOCK_H
#define HLMS_NODE_UNLIT_DATABLOCK_H

#include <QWidget>
#include "node_node.h"

QT_BEGIN_NAMESPACE

QT_END_NAMESPACE

/****************************************************************************
 * ...
 ***************************************************************************/
class HlmsNodeUnlitDatablock : public Magus::QtNode
{
    public:
        HlmsNodeUnlitDatablock(QString title, QGraphicsItem* parent = 0);
        virtual ~HlmsNodeUnlitDatablock(void);

        // Getters
        const QString& getName (void) {return mName;}
        unsigned int getAlphaTest(void) const {return mAlphaTest;}
        const QColor& getColour (void) {return mColour;}
        float getAlphaTestThreshold(void){return mAlphaTestThreshold;}

        // Setters
        void setName (const QString& name) {mName = name;}
        void setColour (const QColor& colour) {mColour = colour;}
        void setAlphaTest(unsigned int alphaTest) {mAlphaTest = alphaTest;}
        void setAlphaTestThreshold(float alphaTestThreshold){mAlphaTestThreshold = alphaTestThreshold;}

    private:
        QString mName;
        unsigned int mAlphaTest;
        float mAlphaTestThreshold;
        QColor mColour;
};

#endif
