/****************************************************************************
**
** Copyright (C) 2016
**
** This file is generated by the Magus toolkit
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
****************************************************************************/

// Include
#include "material_browser.h"
#include <QMessageBox>

//****************************************************************************/
MaterialBrowserWidget::MaterialBrowserWidget(const QString& iconDir, QWidget* parent) : QWidget(parent)
{
    mIconDir = iconDir;
    QHBoxLayout* mainLayout = new QHBoxLayout;
    mResourceMain = new MaterialMain(iconDir); // Don't set parent
    connect(mResourceMain, SIGNAL(jSonFileSelectedToProcess(QString)), this, SLOT(handleJsonFileSelectedToProcess(QString)));
    mainLayout->addWidget(mResourceMain);
    setLayout(mainLayout);
}

//****************************************************************************/
MaterialBrowserWidget::~MaterialBrowserWidget(void)
{
}

//****************************************************************************/
const QString& MaterialBrowserWidget::getSelectedFullQualifiedName(void)
{
    return mResourceMain->getSelectedFullQualifiedName();
}

//****************************************************************************/
QVector<Magus::QtResourceInfo*>& MaterialBrowserWidget::getResources (void)
{
    // Delegate to mResourceMain
    return mResourceMain->getResources();
}

//****************************************************************************/
void MaterialBrowserWidget::setResources (const QVector<Magus::QtResourceInfo*>& resources)
{
    mResourceMain->setResources(resources);
}

//****************************************************************************/
void MaterialBrowserWidget::addMaterial(const QString& baseNameJson,
                                   const QString& fullNameJson,
                                   const QString& baseNameThumb,
                                   EditorHlmsTypes type)
{
    mResourceMain->addMaterial(baseNameJson, fullNameJson, baseNameThumb, type);
}

//****************************************************************************/
void MaterialBrowserWidget::initResourceTree(void)
{
    mResourceMain->initResourceTree();
}

//****************************************************************************/
void MaterialBrowserWidget::handleJsonFileSelectedToProcess(const QString& fullNameJson)
{
    emit jSonFileSelectedToProcess(fullNameJson);
}

//****************************************************************************/
void MaterialBrowserWidget::clearResources (void)
{
    mResourceMain->clearResources();
}
