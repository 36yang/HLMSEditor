/****************************************************************************
**
** Copyright (C) 2016
**
** This file is generated by the Magus toolkit
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
****************************************************************************/

// Include
#include "material_browser_dialog.h"

//****************************************************************************/
MaterialBrowserDialog::MaterialBrowserDialog(QWidget* parent, Qt::WindowFlags f) :
    QDialog(parent, f)
{
    setWindowTitle(QString("Material Browser"));
    QRect rec = QApplication::desktop()->screenGeometry();
    setMinimumWidth(0.3 * rec.width());
    setMinimumHeight(0.4 * rec.height());

    // Create the Resource widget
    mResourceWidget = new MaterialBrowserWidget(ICON_PATH, this);
    connect(mResourceWidget, SIGNAL(jSonFileSelectedToProcess(QString)), this, SLOT(handleJsonFileSelectedToProcess(QString)));

    // Create a buttonbox
    QDialogButtonBox* buttonBox = new QDialogButtonBox(QDialogButtonBox::Ok | QDialogButtonBox::Cancel, this);
    QPushButton* button = buttonBox->button(QDialogButtonBox::Cancel);
    button->setText("Undo remove from list");
    button = buttonBox->button(QDialogButtonBox::Ok);
    button->setText("Edit material");
    connect(buttonBox, SIGNAL(accepted()), this, SLOT(handleOkAndAccept()));
    connect(buttonBox, SIGNAL(rejected()), this, SLOT(handleCancel()));

    // Set the layout
    QHBoxLayout* buttonsLayout = new QHBoxLayout;
    buttonsLayout->addWidget(buttonBox);
    QVBoxLayout* mainLayout = new QVBoxLayout;
    mainLayout->addLayout(buttonsLayout);
    mainLayout->addWidget(mResourceWidget);
    setLayout(mainLayout);
}

//****************************************************************************/
MaterialBrowserDialog::~MaterialBrowserDialog(void)
{

}

//****************************************************************************/
void MaterialBrowserDialog::addMaterial(const QString& baseNameJson,
                                        const QString& fullNameJson,
                                        const QString& baseNameThumb,
                                        EditorHlmsTypes type)
{
    mResourceWidget->addMaterial(baseNameJson, fullNameJson, baseNameThumb, type);
}

//****************************************************************************/
QVector<Magus::QtResourceInfo*>& MaterialBrowserDialog::getResources (void)
{
    // Delegate to mResourceWidget
    return mResourceWidget->getResources();
}

//****************************************************************************/
void MaterialBrowserDialog::setResources (const QVector<Magus::QtResourceInfo*>& resources)
{
    mResourceWidget->setResources(resources);
}

//****************************************************************************/
void MaterialBrowserDialog::initResourceTree(void)
{
    mResourceWidget->initResourceTree();
}

//****************************************************************************/
void MaterialBrowserDialog::handleJsonFileSelectedToProcess(const QString& fullNameJson)
{
    emit okClicked(fullNameJson);
}

//****************************************************************************/
void MaterialBrowserDialog::handleOkAndAccept(void)
{
    QString selectedFileName = mResourceWidget->getSelectedFullQualifiedName();
    emit okClicked(selectedFileName);
}

//****************************************************************************/
void MaterialBrowserDialog::handleCancel(void)
{
    emit cancelClicked();
}

//****************************************************************************/
void MaterialBrowserDialog::clearResources (void)
{
    mResourceWidget->clearResources();
}

//****************************************************************************/
void MaterialBrowserDialog::closeEvent(QCloseEvent *event)
{
    emit closeClicked();
}
